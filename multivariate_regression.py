# -*- coding: utf-8 -*-
"""Multivariate Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QmAKeHcAYGwrDsnbwCODYxcArrSiP-4F
"""

# 라이브러리 import
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# data 가져오기
df = pd.read_csv('/content/auto-mpg.csv', header=None)
# column 설정
df.columns = ['mpg','cylinders','displacement','horsepower','weight','acceleration','model year','origin','name']
# horsepower의 ? 값 nan으로 대체 후 해당 행 삭제, float으로 type 바꾸기
df['horsepower'].replace('?', np.nan, inplace=True)
df.dropna(subset=['horsepower'], axis=0, inplace=True)
df['horsepower'] = df['horsepower'].astype('float')
# new df column 설정
ndf = df[['mpg','cylinders','horsepower','weight']]

X=ndf[['cylinders','horsepower','weight']]
y=ndf['mpg']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)

print('훈련 데이터: ', X_train.shape)
print('검증 데이터: ', X_test.shape)

from sklearn.linear_model import LinearRegression
lr = LinearRegression()

lr.fit(X_train, y_train)

r_square = lr.score(X_test, y_test)
print(r_square)
print('\n')

print('X 변수의 계수 a: ', lr.coef_)
print('\n')

print('상수항 b', lr.intercept_)

y_hat = lr.predict(X_test)

plt.figure(figsize=(10, 5))
ax1 = sns.kdeplot(y_test, label='y_test')
ax2 = sns.kdeplot(y_hat, label='y_hat', ax=ax1)
plt.legend()
plt.show()