# -*- coding: utf-8 -*-
"""2-1 training and test data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DHySwKZcTbn9osIJxIkYAligvtnkio-4

도미, 빙어 길이, 무게 데이터
"""

fish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 
                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 
                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, 
                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]
fish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 
                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 
                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, 
                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]

fish_data = [[l, w] for l, w in zip(fish_length, fish_weight)]
fish_target = [0] * 35 + [1] * 14

from sklearn.neighbors import KNeighborsClassifier
kn = KNeighborsClassifier()
print(fish_data[4])
print(fish_data[0:5])

print(fish_data[:5])

print(fish_data[44:])

# 훈련 세트로 입력값 중 0부터 34번째 인덱스까지 사용
train_input = fish_data[:35]
# 훈련 세트로 타깃값 중 0부터 34번째 인덱스까지 사용
train_target = fish_target[:35]
# 테스트 세트로 입력값 중 35번째부터 마지막 인덱스까지 사용
test_input = fish_data[35:]
# 테스트 세트로 타깃값 중 35번째부터 마지막 인덱스까지 사용
test_target = fish_target[35:]

kn = kn.fit(train_input, train_target)
kn.score(test_input, test_target)

import numpy as np

"""fish data를 array로 만들어 input_arr에 저장

array [[길이, 무게],[길이, 무게]...] 형태로 만든다

fish_target를 array로 만들어 target_arr에 저장

array [[1],[1]...[0]...[0]] 형태로 결과 추출
"""

input_arr = np.array(fish_data)
target_arr = np.array(fish_target)
print(input_arr.shape)

"""seed는 언제나 똑같은 랜덤값이 나오도록 지정해주는 값"""

np.random.seed(42)
index = np.arange(49) # 인덱스 값 0~48 생성
np.random.shuffle(index) # 인덱스 값을 무작위로 섞기

print(input_arr[[1,3]]) # 첫번째, 3번째 sample 추출

"""훈련 데이터에 대해 랜덤으로 섞인 index 값으로 추출

이때 target도 동일한 index 값으로 추출
"""

train_input = input_arr[index[:35]] 
train_target = target_arr[index[:35]]

"""input_arr의 13번째 인덱스에 있던 값과
train_input의 0번째 인덱스의 값이 같게 된다.
"""

print((input_arr[13], train_input[0]))

test_input = input_arr[index[35:]]
test_target = target_arr[index[35:]]

"""얼마나 잘 섞였는지 선점도로 확인"""

import matplotlib.pyplot as plt
plt.scatter(train_input[:,0], train_input[:,1], color = 'k')   # train_input[:,0]은 길이 데이터, train_input[:,1]은 무게 데이터
plt.scatter(test_input[:,0], test_input[:,1], color = 'b')
plt.xlabel('length')
plt.ylabel('weight')
plt.show()

kn = kn.fit(train_input, train_target)

kn.score(test_input, test_target)

kn.predict(test_input)

test_target